@import '../../styles/sass/variables';
@import '../../styles/sass/mixins';

.input[type='text'],
.input[type='email'],
.input[type='password'],
.input[type='textarea'],
.input[type='number'] {
  font-size: 1.5rem;
  font-family: inherit;
  color: $color-secondary;
  padding: 1.5rem 2rem;
  border-radius: 4px;
  background-color: rgba($color-grey-light-1, 0.6);
  border: none;
  border-bottom: 2px solid transparent;
  display: block;
  transition: all 0.4s;

  &:focus {
    outline: none;
    box-shadow: 0 1rem 2rem rgba(white, 0.2);
    border-bottom: 2px solid $color-success;

    &:invalid {
      border-bottom: 2px solid $color-danger;
    }
  }

  &::-webkit-input-placeholder {
    color: $color-grey-dark;
  }
}

//Disable number input arrows
.input[type='number']::-webkit-inner-spin-button,
.input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.input[type='number'] {
  -moz-appearance: textfield;
}

//Custom placeholder
.input:placeholder-shown + .label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem);
}

.label {
  font-size: 1.5rem;
  font-weight: 500;
  text-align: start;
  margin-left: 2rem;
  display: block;
  transition: all 0.3s;
}

//Custom Checkboxes
.checkbox {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  font-size: 1.8rem;
}

.input[type='checkbox'] {
  position: relative;
  width: 1.6em;
  height: 1.6em;
  background-color: rgba($color-grey-light-1, 0.6);
  color: black;
  border: none;
  border-radius: 4px;
  appearance: none;
  cursor: pointer;

  &::before {
    position: absolute;
    content: '';
    display: block;
    top: 2px;
    left: 7px;
    width: 7px;
    height: 15px;
    border-style: solid;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
    opacity: 0;
  }

  &:checked {
    color: black;
  }

  &:checked::before {
    opacity: 1;
  }
}

//custom Upload button
.upload {
  position: relative;
  display: flex;
  justify-content: space-evenly;

  .input {
    height: 100%;
    width: 15rem;
    opacity: 0;
    z-index: 2;
    cursor: pointer;
    @include centerElement;

    &:hover + .btnUpload {
      filter: contrast(200%);
    }

    @media screen and (max-width: $bp-mobile-land) {
      position: absolute;
      left: 8rem;
      top: 80%;
    }
  }

  .btnUpload {
    width: 15rem;
    height: 85%;
    @include centerElement;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    font-size: 1.8rem;
    border-radius: 4px;
    border: none;
    color: rgba($color-grey-light-1, 0.8);
    background-image: linear-gradient(to top, rgb(49, 49, 49), rgb(99, 97, 97));

    @media screen and (max-width: $bp-mobile-land) {
      left: 8rem;
      top: 80%;
    }

    svg {
      margin-right: 5%;
    }
  }

  .label {
    position: absolute;
    top: 25%;
    left: 0;

    @media screen and (max-width: $bp-mobile-land) {
      top: -2rem;
    }
  }

  .previewImage {
    width: 20%;
    position: absolute;
    right: 0;

    &.rounded img {
      height: 4rem !important;
      width: 4rem !important;
      border-radius: 100px;
    }

    &.portrait {
      top: -3rem;
      img {
        height: 12rem !important;
        width: 9rem !important;
      }
    }
  }
}

.icon {
  height: 0;
  width: 0;
  margin-left: 89%;

  svg {
    font-size: 2.2rem;
    transform: translateY(-240%);
    fill: $color-secondary;
  }
}

//Custom Radio input
.radio {
  .input {
    display: none;
  }

  .label {
    cursor: pointer;
    position: relative;
    padding-left: 4rem;
  }

  .radioButton {
    height: 2.5rem;
    width: 2.5rem;
    border: 2px solid $color-blue-mid;
    border-radius: 5px;
    display: inline-block;
    position: absolute;
    left: 0;

    &::after {
      content: '';
      display: block;
      height: 2.5rem;
      width: 2.5rem;
      @include centerElement;
      background-color: $color-blue-mid;
      opacity: 0;
      border-radius: 5px;
      transition: opacity 0.2s;
    }
  }
}

.input:checked ~ .label .radioButton::after {
  opacity: 1;
}

.error {
  color: $color-danger;
  transform: translateY(-2rem);
}
